plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    //noinspection GradleCompatible
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33
        versionName "0.1.86"
        buildConfigField("String","versionName","\"${versionName}\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        ndk {
            abiFilters "arm64-v8a"; abiFilters "armeabi-v7a"
        }
    }



    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures {
        viewBinding true
    }
    ndkVersion '21.3.6528147'


}
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
//    implementation 'com.google.android.material:material:1.7.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.alibaba:fastjson:1.1.73.android'
    implementation 'com.alibaba:arouter-api:1.5.2'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'
    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    implementation 'com.tencent.mars:mars-xlog:1.2.6'




    //camra
    implementation "androidx.camera:camera-core:1.1.0-alpha08"
    implementation "androidx.camera:camera-camera2:1.1.0-alpha08"
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha08"
    implementation "androidx.camera:camera-view:1.0.0-alpha28"
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation project(":PUNetWork")
    implementation project(":PUTrack")
//    api 'com.punet.punetwork:punetwork:0.0.1'
//    api 'com.putrack.putrack:putrack:0.0.1'

    // okHttp网络请求框架
    // define a BOM and its version
    api(platform("com.squareup.okhttp3:okhttp-bom:4.9.1"))

    // define any required OkHttp artifacts without version
    api("com.squareup.okhttp3:okhttp")
    api("com.squareup.okhttp3:logging-interceptor")

    //retrofit网络请求框架
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    //retrofit添加Json解析返回数据
    api 'com.squareup.retrofit2:converter-scalars:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    //retrofit添加RxJava支持
    api 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    api "io.reactivex.rxjava3:rxjava:3.0.13"
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'

    //数据库
    implementation 'androidx.room:room-common:2.3.0'
    annotationProcessor 'androidx.room:room-compiler:2.3.0'

}

afterEvaluate {
    publishing {
        //发布的 jar 包配置
        publications {
            release(MavenPublication) {
                groupId = "com.sandglass.sandglasslibrary"
                artifactId = "sandglassFeedback"
                version = "0.1.86"
                description "沙漏aar"
                //aar 文件
                def projectName = project.getName()
                artifact "build/outputs/aar/${projectName}-release.aar"

                pom.withXml{
                    def dependenciesNode = asNode().appendNode("dependencies")
                    configurations.implementation.allDependencies.forEach(){
                        Dependency dependency ->
                            if (dependency.version != "unspecified" && dependency.name != "unspecified"){
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dependency.group)
                                dependencyNode.appendNode('artifactId', dependency.name)
                                dependencyNode.appendNode('version', dependency.version)
                            }
                    }
                }

            }
        }
        //仓库地址配置
        repositories {
            maven {
                // test, upload local maven repository
                //url = "file:" + new File(project.rootProject.rootDir, "local_test_repo").path
                //url = "file:///Users/kingmac/Downloads/maven_android"
                url = "file:///Users/liutao/Documents/Git/Sandglass_Android_Bundles"
            }
        }
    }
}